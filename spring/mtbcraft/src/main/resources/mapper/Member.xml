<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mtbcraft.mapper.MemberMapper">
	<select id="memberInsert" resultType="com.mtbcraft.dto.Member">
		insert into rider(r_id,
		r_pw, r_name, r_nickname, r_birth, r_phone, r_gender, r_addr, r_addr2,
		r_image, r_type)
		values (#{r_id,jdbcType=VARCHAR},
		#{r_pw,jdbcType=VARCHAR},
		#{r_name,jdbcType=VARCHAR},
		#{r_nickname,jdbcType=VARCHAR},
		#{r_birth,jdbcType=DATE},
		#{r_phone,jdbcType=VARCHAR},
		#{r_gender,jdbcType=VARCHAR},
		#{r_addr,jdbcType=VARCHAR},
		#{r_addr2,jdbcType=VARCHAR}, #{r_image},
		#{r_type,jdbcType=INTEGER})
	</select>
	
	<select id="getRidingRecord" parameterType="String" resultType="com.mtbcraft.dto.RidingRecord">
		select * from riding_record where rr_rider = #{rr_rider} order by rr_num desc
	</select>
	
	<select id="getRidingRecordDetail" parameterType="String" resultType="com.mtbcraft.dto.RidingRecord">
		select * from riding_record where rr_rider = #{rr_rider} and rr_num = #{rr_num}
	</select>
	
	<update id="updateRidingRecord">
		UPDATE RIDING_RECORD SET RR_OPEN=#{rr_open} WHERE
		RR_NUM=#{rr_num}
	</update>

	<select id="getCourse" resultType="com.mtbcraft.dto.Course">
		select * from course
	</select>

	<select id="getScrapCourse" parameterType="String"
		resultType="com.mtbcraft.dto.Course">
		select * from course where exists (select ss_course from
		SCRAP_STATUS where SS_RIDER=#{rr_rider} and
		course.C_NUM=SCRAP_STATUS.SS_COURSE)
	</select>

	<insert id="postScrapCourse">
		INSERT INTO SCRAP_STATUS(SS_NUM, SS_RIDER, SS_COURSE)
		VALUES(SEQ_SCRAPSTATUS.nextval, #{ss_rider}, #{ss_course})
	</insert>

	<delete id="deleteScrapCourse">
		DELETE FROM SCRAP_STATUS WHERE SS_COURSE=#{ss_course}
		AND SS_RIDER=#{ss_rider}
	</delete>

	<!-- 데이터가 많지 않아 현재 진행상황(대기, 인정, 불가) 반영하지않고 모두 들고옴 후에 select * from DANGEROUS_AREA 
		where DA_STATUS=1 로 수정해야함 -->
	<select id="getDangerousArea"
		resultType="com.mtbcraft.dto.DangerousArea">
		select * from DANGEROUS_AREA
	</select>

	<select id="getUserDangerousArea" parameterType="String"
		resultType="com.mtbcraft.dto.DangerousArea">
		select * from DANGEROUS_AREA where DA_RIDER = #{rr_rider}
	</select>

	<insert id="postDangerousArea"
		parameterType="com.mtbcraft.dto.DangerousArea">
		insert into dangerous_area(da_num, da_rider,
		da_latitude, da_addr, da_status, da_content, da_longitude, da_image)
		values(SEQ_DANGEROUSAREA.nextval, #{da_rider}, #{da_latitude},
		#{da_addr}, 0, #{da_content}, #{da_longitude}, #{da_image})
	</insert>

	<delete id="deleteDangerousArea" parameterType="Integer">
		DELETE
		DANGEROUS_AREA WHERE DA_NUM=#{da_num}
	</delete>

	<insert id="postNoDanger"
		parameterType="com.mtbcraft.dto.No_Danger">
		INSERT INTO NO_DANGER(ND_NUM, ND_RIDER, ND_CONTENT,
		ND_IMAGE) values(#{nd_num}, #{nd_rider}, #{nd_content}, #{nd_image})
	</insert>
	<insert id="writeDao">
		insert into MARKET_VISION (num, day, content) values
		(vision_seq.nextval,
		#{param1}, #{param2})
	</insert>

	<delete id="deleteDao">
		delete from MARKET_VISION where num = #{param1}
	</delete>
</mapper>

